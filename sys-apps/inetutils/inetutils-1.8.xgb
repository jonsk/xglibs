#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="a collection of common network programs"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://www.gnu.org/software/inetutils/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="http://ftp.gnu.org/gnu/inetutils/$N-$V$R.tar.gz"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"



#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking ..."
	tar xf $XGPATH_SOURCE/$N-$V$R.tar.gz
}

#config
xgb_config()
{
	#fist, cd build directory
	cd $N-$V$R

	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --prefix=/usr --libexecdir=/usr/sbin \
		--localstatedir=/var --disable-ifconfig \
	        --disable-logger --disable-syslogd --disable-whois \
		--disable-servers"

	#Third, call configure with $XGB_CONFIG
	./configure $XGB_CONFIG
}

#build
xgb_build()
{
	#run make in current directory
	make
}

#install
xgb_install()
{
	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
	err_check "install $N failed."

	mkdir -p $XGPATH_DEST/bin
	mkdir -p $XGPATH_DEST/sbin
	mv -v $XGPATH_DEST/usr/bin/{hostname,ping,ping6} $XGPATH_DEST/bin
	err_check "install $N failed."

	mv -v $XGPATH_DEST/usr/bin/traceroute $XGPATH_DEST/sbin
	err_check "install $N failed."
}


