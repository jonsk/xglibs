#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="Linux Kernel"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://www.kernel.org"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

#SRC_URI="http://foo.bar.com/$N-$V.tar.bz2"
SRC_URI="http://www.kernel.org/pub/linux/kernel/v2.6/linux-$V$R.tar.bz2"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"





#unpack
xgb_unpack()
{
	echo "Unpacking ..."
	tar xf $XGPATH_SOURCE/linux-$V$R.tar.bz2
}

#build
xgb_build()
{
	cd linux-$V$R

	#copy configure file
	cp /boot/config-xiange .config
	err_check "change to /usr/src failed"

	make
	err_check "[Error] linux_header: check falied."

	make modules
	err_check "[Error] linux_header: check falied."

}

#install
xgb_install()
{
	#copy image
	mkdir -p $XGPATH_DEST/boot
	cp arch/i386/boot/bzImage $XGPATH_DEST/boot/vmlinuz-$V$R
	err_check "[Error] install kernel image failed"

	cp .config $XGPATH_DEST/boot/config-$V$R
	err_check "[Error] install kernel config failed"

	#install modules
	echo ">>> install modules "
	mkdir -p $XGPATH_DEST/lib/modules
	make INSTALL_MOD_PATH=$XGPATH_DEST modules_install
	err_check "[Error] install modules falied."

	#install firmware
	echo ">>> install firmwares "
	make INSTALL_MOD_PATH=$XGPATH_DEST firmware_install
}


