#!/bin/bash
#
# Xiange Linux build scripts

# Short one-line description of this package.
DESCRIPTION="GNU lexical analyser generator"

# Homepage, not used by Portage directly but handy for developer reference
HOMEPAGE="http://flex.sourceforge.net/"

# Point to any required sources; these will be automatically downloaded by
# gpkg. 
# $N = package name, such as autoconf, x-org
# $V = package version, such as 2.6.10

SRC_URI="http://prdownloads.sourceforge.net/flex/$N-$V$R.tar.bz2 \
	http://patches.cross-lfs.org/dev/flex-2.5.35-gcc44-1.patch"


# Binary package URI.
BIN_URI=""


# Runtime Depend
RDEPEND=""

# Build time depend
DEPEND="${RDEPEND}"


#unpack
xgb_unpack()
{
	#unpard file from $XGPATH_SOURCE to current directory.
	echo "Unpacking to `pwd`"
	tar xf $XGPATH_SOURCE/$N-$V$R.tar.bz2
}

#config
xgb_config()
{
	echo "config $N-$V$R..."

	#fist, cd build directory
	cd $N-$V$R
	patch -Np1 -i $XGPATH_SOURCE/flex-2.5.35-gcc44-1.patch


	#second, add package specified config params to XGB_CONFIG
	XGB_CONFIG+=" --prefix=/usr"

	#Third, call configure with $XGB_CONFIG
	./configure $XGB_CONFIG
}

#build
xgb_build()
{
	echo "make $N-$V$R..."

	#run make in current directory
	make
}

#check
xgb_check()
{
	echo "checking $N-$V$R.."
	make check
}

#install
xgb_install()
{
	echo "install to $XGPATH_DEST"

	#install everything to $XGPATH_DEST
	make DESTDIR=$XGPATH_DEST install
	err_check "install $N failed"

	#install libl.a
	ln -sv libfl.a $XGPATH_DEST/usr/lib/libl.a
	err_check "install $N failed"

	cat > $XGPATH_DEST/usr/bin/lex << "EOF"
#!/bin/sh
# Begin /usr/bin/lex

exec /usr/bin/flex -l "$@"

# End /usr/bin/lex
EOF
	
	chmod -v 755 $XGPATH_DEST/usr/bin/lex	
	err_check "install $N failed"

	#install docs.
#	mkdir -p $XGPATH_DEST/usr/share/doc/$N-$V$R
#	cp -v doc/flex.pdf \
#	         $XGPATH_DEST/usr/share/doc/$N-$V$R
	err_check "install $N pdf failed"
}


